// APIs and message types for an enclosed pipeline.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: mtap/api/v1/pipeline.proto

package v1

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to process an event through a pipeline.
type ProcessEventInPipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the pipeline.
	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	// The serialized event to perform processing on.
	Event *_struct.Struct `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	// The params to pass to the pipeline
	Params *_struct.Struct `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// * Whether the event should be kept alive after it is finished processing. Defaults to False.
	KeepAfter bool `protobuf:"varint,4,opt,name=keep_after,json=keepAfter,proto3" json:"keep_after,omitempty"`
}

func (x *ProcessEventInPipelineRequest) Reset() {
	*x = ProcessEventInPipelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mtap_api_v1_pipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventInPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventInPipelineRequest) ProtoMessage() {}

func (x *ProcessEventInPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mtap_api_v1_pipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventInPipelineRequest.ProtoReflect.Descriptor instead.
func (*ProcessEventInPipelineRequest) Descriptor() ([]byte, []int) {
	return file_mtap_api_v1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessEventInPipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *ProcessEventInPipelineRequest) GetEvent() *_struct.Struct {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ProcessEventInPipelineRequest) GetParams() *_struct.Struct {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ProcessEventInPipelineRequest) GetKeepAfter() bool {
	if x != nil {
		return x.KeepAfter
	}
	return false
}

// The result of processing an event through the pipeline.
type ProcessEventInPipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized json event result of the pipeline processing
	Event *_struct.Struct `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Processor-specific timings of different operations. Includes a "process"
	// time for total time taken.
	TimingInfo map[string]*duration.Duration                  `protobuf:"bytes,2,rep,name=timing_info,json=timingInfo,proto3" json:"timing_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Result     *ProcessEventInPipelineResponse_PipelineResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProcessEventInPipelineResponse) Reset() {
	*x = ProcessEventInPipelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mtap_api_v1_pipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventInPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventInPipelineResponse) ProtoMessage() {}

func (x *ProcessEventInPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mtap_api_v1_pipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventInPipelineResponse.ProtoReflect.Descriptor instead.
func (*ProcessEventInPipelineResponse) Descriptor() ([]byte, []int) {
	return file_mtap_api_v1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessEventInPipelineResponse) GetEvent() *_struct.Struct {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ProcessEventInPipelineResponse) GetTimingInfo() map[string]*duration.Duration {
	if x != nil {
		return x.TimingInfo
	}
	return nil
}

func (x *ProcessEventInPipelineResponse) GetResult() *ProcessEventInPipelineResponse_PipelineResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ProcessEventInPipelineResponse_ComponentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string                        `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	ResultDict *_struct.Struct               `protobuf:"bytes,2,opt,name=result_dict,json=resultDict,proto3" json:"result_dict,omitempty"`
	TimingInfo map[string]*duration.Duration `protobuf:"bytes,3,rep,name=timing_info,json=timingInfo,proto3" json:"timing_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProcessEventInPipelineResponse_ComponentResult) Reset() {
	*x = ProcessEventInPipelineResponse_ComponentResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mtap_api_v1_pipeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventInPipelineResponse_ComponentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventInPipelineResponse_ComponentResult) ProtoMessage() {}

func (x *ProcessEventInPipelineResponse_ComponentResult) ProtoReflect() protoreflect.Message {
	mi := &file_mtap_api_v1_pipeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventInPipelineResponse_ComponentResult.ProtoReflect.Descriptor instead.
func (*ProcessEventInPipelineResponse_ComponentResult) Descriptor() ([]byte, []int) {
	return file_mtap_api_v1_pipeline_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ProcessEventInPipelineResponse_ComponentResult) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ProcessEventInPipelineResponse_ComponentResult) GetResultDict() *_struct.Struct {
	if x != nil {
		return x.ResultDict
	}
	return nil
}

func (x *ProcessEventInPipelineResponse_ComponentResult) GetTimingInfo() map[string]*duration.Duration {
	if x != nil {
		return x.TimingInfo
	}
	return nil
}

type ProcessEventInPipelineResponse_PipelineResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentResults []*ProcessEventInPipelineResponse_ComponentResult `protobuf:"bytes,1,rep,name=component_results,json=componentResults,proto3" json:"component_results,omitempty"`
	ElapsedTime      *duration.Duration                                `protobuf:"bytes,2,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
}

func (x *ProcessEventInPipelineResponse_PipelineResult) Reset() {
	*x = ProcessEventInPipelineResponse_PipelineResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mtap_api_v1_pipeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventInPipelineResponse_PipelineResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventInPipelineResponse_PipelineResult) ProtoMessage() {}

func (x *ProcessEventInPipelineResponse_PipelineResult) ProtoReflect() protoreflect.Message {
	mi := &file_mtap_api_v1_pipeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventInPipelineResponse_PipelineResult.ProtoReflect.Descriptor instead.
func (*ProcessEventInPipelineResponse_PipelineResult) Descriptor() ([]byte, []int) {
	return file_mtap_api_v1_pipeline_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ProcessEventInPipelineResponse_PipelineResult) GetComponentResults() []*ProcessEventInPipelineResponse_ComponentResult {
	if x != nil {
		return x.ComponentResults
	}
	return nil
}

func (x *ProcessEventInPipelineResponse_PipelineResult) GetElapsedTime() *duration.Duration {
	if x != nil {
		return x.ElapsedTime
	}
	return nil
}

var File_mtap_api_v1_pipeline_proto protoreflect.FileDescriptor

var file_mtap_api_v1_pipeline_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x74, 0x61, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x74,
	0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0xcc, 0x06, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xb3, 0x02, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x6c, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b,
	0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x58, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xb8, 0x01, 0x0a, 0x0e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x68, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3c,
	0x0a, 0x0c, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x58, 0x0a, 0x0f,
	0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x9e, 0x01, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x2a, 0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x74,
	0x61, 0x70, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27,
	0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42, 0x28, 0x0a, 0x19, 0x65, 0x64, 0x75, 0x2e, 0x75,
	0x6d, 0x6e, 0x2e, 0x6e, 0x6c, 0x70, 0x69, 0x65, 0x2e, 0x6d, 0x74, 0x61, 0x70, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x6d, 0x74, 0x61, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mtap_api_v1_pipeline_proto_rawDescOnce sync.Once
	file_mtap_api_v1_pipeline_proto_rawDescData = file_mtap_api_v1_pipeline_proto_rawDesc
)

func file_mtap_api_v1_pipeline_proto_rawDescGZIP() []byte {
	file_mtap_api_v1_pipeline_proto_rawDescOnce.Do(func() {
		file_mtap_api_v1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_mtap_api_v1_pipeline_proto_rawDescData)
	})
	return file_mtap_api_v1_pipeline_proto_rawDescData
}

var file_mtap_api_v1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mtap_api_v1_pipeline_proto_goTypes = []interface{}{
	(*ProcessEventInPipelineRequest)(nil),                  // 0: mtap.api.v1.ProcessEventInPipelineRequest
	(*ProcessEventInPipelineResponse)(nil),                 // 1: mtap.api.v1.ProcessEventInPipelineResponse
	(*ProcessEventInPipelineResponse_ComponentResult)(nil), // 2: mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult
	(*ProcessEventInPipelineResponse_PipelineResult)(nil),  // 3: mtap.api.v1.ProcessEventInPipelineResponse.PipelineResult
	nil,                       // 4: mtap.api.v1.ProcessEventInPipelineResponse.TimingInfoEntry
	nil,                       // 5: mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult.TimingInfoEntry
	(*_struct.Struct)(nil),    // 6: google.protobuf.Struct
	(*duration.Duration)(nil), // 7: google.protobuf.Duration
}
var file_mtap_api_v1_pipeline_proto_depIdxs = []int32{
	6,  // 0: mtap.api.v1.ProcessEventInPipelineRequest.event:type_name -> google.protobuf.Struct
	6,  // 1: mtap.api.v1.ProcessEventInPipelineRequest.params:type_name -> google.protobuf.Struct
	6,  // 2: mtap.api.v1.ProcessEventInPipelineResponse.event:type_name -> google.protobuf.Struct
	4,  // 3: mtap.api.v1.ProcessEventInPipelineResponse.timing_info:type_name -> mtap.api.v1.ProcessEventInPipelineResponse.TimingInfoEntry
	3,  // 4: mtap.api.v1.ProcessEventInPipelineResponse.result:type_name -> mtap.api.v1.ProcessEventInPipelineResponse.PipelineResult
	6,  // 5: mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult.result_dict:type_name -> google.protobuf.Struct
	5,  // 6: mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult.timing_info:type_name -> mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult.TimingInfoEntry
	2,  // 7: mtap.api.v1.ProcessEventInPipelineResponse.PipelineResult.component_results:type_name -> mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult
	7,  // 8: mtap.api.v1.ProcessEventInPipelineResponse.PipelineResult.elapsed_time:type_name -> google.protobuf.Duration
	7,  // 9: mtap.api.v1.ProcessEventInPipelineResponse.TimingInfoEntry.value:type_name -> google.protobuf.Duration
	7,  // 10: mtap.api.v1.ProcessEventInPipelineResponse.ComponentResult.TimingInfoEntry.value:type_name -> google.protobuf.Duration
	0,  // 11: mtap.api.v1.Pipeline.Process:input_type -> mtap.api.v1.ProcessEventInPipelineRequest
	1,  // 12: mtap.api.v1.Pipeline.Process:output_type -> mtap.api.v1.ProcessEventInPipelineResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_mtap_api_v1_pipeline_proto_init() }
func file_mtap_api_v1_pipeline_proto_init() {
	if File_mtap_api_v1_pipeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mtap_api_v1_pipeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventInPipelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mtap_api_v1_pipeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventInPipelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mtap_api_v1_pipeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventInPipelineResponse_ComponentResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mtap_api_v1_pipeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventInPipelineResponse_PipelineResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mtap_api_v1_pipeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mtap_api_v1_pipeline_proto_goTypes,
		DependencyIndexes: file_mtap_api_v1_pipeline_proto_depIdxs,
		MessageInfos:      file_mtap_api_v1_pipeline_proto_msgTypes,
	}.Build()
	File_mtap_api_v1_pipeline_proto = out.File
	file_mtap_api_v1_pipeline_proto_rawDesc = nil
	file_mtap_api_v1_pipeline_proto_goTypes = nil
	file_mtap_api_v1_pipeline_proto_depIdxs = nil
}
