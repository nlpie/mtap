// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mtap/api/v1/processing.proto

package mtap_api_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The name of a newly created label index during a process call.
type CreatedIndex struct {
	// The document's name where the index was created.
	DocumentName string `protobuf:"bytes,1,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	// The name of the label index that was created.
	IndexName            string   `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatedIndex) Reset()         { *m = CreatedIndex{} }
func (m *CreatedIndex) String() string { return proto.CompactTextString(m) }
func (*CreatedIndex) ProtoMessage()    {}
func (*CreatedIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{0}
}

func (m *CreatedIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatedIndex.Unmarshal(m, b)
}
func (m *CreatedIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatedIndex.Marshal(b, m, deterministic)
}
func (m *CreatedIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatedIndex.Merge(m, src)
}
func (m *CreatedIndex) XXX_Size() int {
	return xxx_messageInfo_CreatedIndex.Size(m)
}
func (m *CreatedIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatedIndex.DiscardUnknown(m)
}

var xxx_messageInfo_CreatedIndex proto.InternalMessageInfo

func (m *CreatedIndex) GetDocumentName() string {
	if m != nil {
		return m.DocumentName
	}
	return ""
}

func (m *CreatedIndex) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

// A request for a processor to run on a specific event.
type ProcessRequest struct {
	// The identifier of the processor that is being called, currently is unused
	// but may be eventually used for routing if multiple processors are hosted
	// on the same port / endpoint.
	ProcessorId string `protobuf:"bytes,1,opt,name=processor_id,json=processorId,proto3" json:"processor_id,omitempty"`
	// The identifier of the event to process.
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The event service instance uuid to use to get the event.
	EventServiceInstanceId string `protobuf:"bytes,4,opt,name=event_service_instance_id,json=eventServiceInstanceId,proto3" json:"event_service_instance_id,omitempty"`
	// A dynamic JSON object of runtime parameters that the processor will use.
	Params               *structpb.Struct `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProcessRequest) Reset()         { *m = ProcessRequest{} }
func (m *ProcessRequest) String() string { return proto.CompactTextString(m) }
func (*ProcessRequest) ProtoMessage()    {}
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{1}
}

func (m *ProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessRequest.Unmarshal(m, b)
}
func (m *ProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessRequest.Marshal(b, m, deterministic)
}
func (m *ProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessRequest.Merge(m, src)
}
func (m *ProcessRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessRequest.Size(m)
}
func (m *ProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessRequest proto.InternalMessageInfo

func (m *ProcessRequest) GetProcessorId() string {
	if m != nil {
		return m.ProcessorId
	}
	return ""
}

func (m *ProcessRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *ProcessRequest) GetEventServiceInstanceId() string {
	if m != nil {
		return m.EventServiceInstanceId
	}
	return ""
}

func (m *ProcessRequest) GetParams() *structpb.Struct {
	if m != nil {
		return m.Params
	}
	return nil
}

// The response after a processor completes processing of an event.
type ProcessResponse struct {
	// Processor-specific timings of different operations. Includes a "process"
	// time for total time taken.
	TimingInfo map[string]*durationpb.Duration `protobuf:"bytes,1,rep,name=timing_info,json=timingInfo,proto3" json:"timing_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The dynamic JSON object result returned by the processor.
	Result *structpb.Struct `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	// All label indices that were created on the event during processing.
	CreatedIndices       []*CreatedIndex `protobuf:"bytes,3,rep,name=created_indices,json=createdIndices,proto3" json:"created_indices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProcessResponse) Reset()         { *m = ProcessResponse{} }
func (m *ProcessResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessResponse) ProtoMessage()    {}
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{2}
}

func (m *ProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponse.Unmarshal(m, b)
}
func (m *ProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponse.Marshal(b, m, deterministic)
}
func (m *ProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponse.Merge(m, src)
}
func (m *ProcessResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessResponse.Size(m)
}
func (m *ProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponse proto.InternalMessageInfo

func (m *ProcessResponse) GetTimingInfo() map[string]*durationpb.Duration {
	if m != nil {
		return m.TimingInfo
	}
	return nil
}

func (m *ProcessResponse) GetResult() *structpb.Struct {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ProcessResponse) GetCreatedIndices() []*CreatedIndex {
	if m != nil {
		return m.CreatedIndices
	}
	return nil
}

// Request for processor information.
type GetInfoRequest struct {
	// The identifier of the processor, currently is unused but may be eventually used for routing
	// if multiple processors are hosted on the same port / endpoint.
	ProcessorId          string   `protobuf:"bytes,1,opt,name=processor_id,json=processorId,proto3" json:"processor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{3}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetProcessorId() string {
	if m != nil {
		return m.ProcessorId
	}
	return ""
}

// Processor information response, currently does not include anything besides
// the processor name. May eventually be extended to reflect more processor
// information like documentation, required inputs (label indices and
// parameters), and outputs (label indices and parameters), etc.
type GetInfoResponse struct {
	//
	Metadata             *structpb.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{4}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetMetadata() *structpb.Struct {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// A set of globally-aggregated measurements for a specific processor timer
// across all requests.
type TimerStats struct {
	// The mean duration.
	Mean *durationpb.Duration `protobuf:"bytes,1,opt,name=mean,proto3" json:"mean,omitempty"`
	// The standard deviation of the duration.
	Std *durationpb.Duration `protobuf:"bytes,2,opt,name=std,proto3" json:"std,omitempty"`
	// The maximum duration.
	Max *durationpb.Duration `protobuf:"bytes,3,opt,name=max,proto3" json:"max,omitempty"`
	// The minimum duration.
	Min *durationpb.Duration `protobuf:"bytes,4,opt,name=min,proto3" json:"min,omitempty"`
	// The sum of durations.
	Sum                  *durationpb.Duration `protobuf:"bytes,5,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimerStats) Reset()         { *m = TimerStats{} }
func (m *TimerStats) String() string { return proto.CompactTextString(m) }
func (*TimerStats) ProtoMessage()    {}
func (*TimerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{5}
}

func (m *TimerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerStats.Unmarshal(m, b)
}
func (m *TimerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerStats.Marshal(b, m, deterministic)
}
func (m *TimerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerStats.Merge(m, src)
}
func (m *TimerStats) XXX_Size() int {
	return xxx_messageInfo_TimerStats.Size(m)
}
func (m *TimerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerStats.DiscardUnknown(m)
}

var xxx_messageInfo_TimerStats proto.InternalMessageInfo

func (m *TimerStats) GetMean() *durationpb.Duration {
	if m != nil {
		return m.Mean
	}
	return nil
}

func (m *TimerStats) GetStd() *durationpb.Duration {
	if m != nil {
		return m.Std
	}
	return nil
}

func (m *TimerStats) GetMax() *durationpb.Duration {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *TimerStats) GetMin() *durationpb.Duration {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *TimerStats) GetSum() *durationpb.Duration {
	if m != nil {
		return m.Sum
	}
	return nil
}

// Request for globally-aggregated statistics about the processor.
type GetStatsRequest struct {
	// The deployment identifier of the processor.
	ProcessorId          string   `protobuf:"bytes,1,opt,name=processor_id,json=processorId,proto3" json:"processor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsRequest) Reset()         { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()    {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{6}
}

func (m *GetStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsRequest.Unmarshal(m, b)
}
func (m *GetStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsRequest.Merge(m, src)
}
func (m *GetStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatsRequest.Size(m)
}
func (m *GetStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsRequest proto.InternalMessageInfo

func (m *GetStatsRequest) GetProcessorId() string {
	if m != nil {
		return m.ProcessorId
	}
	return ""
}

// Processor statistics response.
type GetStatsResponse struct {
	// The number of documents processed.
	Processed int32 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	// The number of documents that have failed to process.
	Failures int32 `protobuf:"varint,2,opt,name=failures,proto3" json:"failures,omitempty"`
	// Statistics for each timer.
	TimingStats          map[string]*TimerStats `protobuf:"bytes,3,rep,name=timing_stats,json=timingStats,proto3" json:"timing_stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetStatsResponse) Reset()         { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()    {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92219fa19b46411c, []int{7}
}

func (m *GetStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsResponse.Unmarshal(m, b)
}
func (m *GetStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsResponse.Merge(m, src)
}
func (m *GetStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatsResponse.Size(m)
}
func (m *GetStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsResponse proto.InternalMessageInfo

func (m *GetStatsResponse) GetProcessed() int32 {
	if m != nil {
		return m.Processed
	}
	return 0
}

func (m *GetStatsResponse) GetFailures() int32 {
	if m != nil {
		return m.Failures
	}
	return 0
}

func (m *GetStatsResponse) GetTimingStats() map[string]*TimerStats {
	if m != nil {
		return m.TimingStats
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatedIndex)(nil), "mtap.api.v1.CreatedIndex")
	proto.RegisterType((*ProcessRequest)(nil), "mtap.api.v1.ProcessRequest")
	proto.RegisterType((*ProcessResponse)(nil), "mtap.api.v1.ProcessResponse")
	proto.RegisterMapType((map[string]*durationpb.Duration)(nil), "mtap.api.v1.ProcessResponse.TimingInfoEntry")
	proto.RegisterType((*GetInfoRequest)(nil), "mtap.api.v1.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "mtap.api.v1.GetInfoResponse")
	proto.RegisterType((*TimerStats)(nil), "mtap.api.v1.TimerStats")
	proto.RegisterType((*GetStatsRequest)(nil), "mtap.api.v1.GetStatsRequest")
	proto.RegisterType((*GetStatsResponse)(nil), "mtap.api.v1.GetStatsResponse")
	proto.RegisterMapType((map[string]*TimerStats)(nil), "mtap.api.v1.GetStatsResponse.TimingStatsEntry")
}

func init() { proto.RegisterFile("mtap/api/v1/processing.proto", fileDescriptor_92219fa19b46411c) }

var fileDescriptor_92219fa19b46411c = []byte{
	// 729 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0x96, 0x93, 0xa6, 0x4d, 0x4e, 0x72, 0x9b, 0x6a, 0x16, 0xb7, 0x49, 0x9a, 0x5e, 0xf5, 0xba,
	0x20, 0x55, 0x2d, 0xb5, 0x69, 0x0b, 0x12, 0x94, 0x5d, 0xf9, 0x53, 0x16, 0xa0, 0xe2, 0x56, 0x82,
	0x5d, 0x34, 0x8d, 0x27, 0xd1, 0x88, 0xcc, 0xd8, 0x78, 0xc6, 0x51, 0xab, 0xaa, 0x0b, 0x78, 0x05,
	0x1e, 0x84, 0x3d, 0xaf, 0xc1, 0x2b, 0xb0, 0x67, 0x09, 0x4b, 0x34, 0x3f, 0x49, 0x13, 0x53, 0x1c,
	0xd8, 0x79, 0xce, 0xf9, 0x66, 0xce, 0x77, 0xbe, 0xf3, 0x1d, 0x43, 0x9b, 0x49, 0x1c, 0xfb, 0x38,
	0xa6, 0xfe, 0x68, 0xcf, 0x8f, 0x93, 0xa8, 0x47, 0x84, 0xa0, 0x7c, 0xe0, 0xc5, 0x49, 0x24, 0x23,
	0x54, 0x55, 0x59, 0x0f, 0xc7, 0xd4, 0x1b, 0xed, 0xb5, 0xda, 0x83, 0x28, 0x1a, 0x0c, 0x89, 0x06,
	0x63, 0xce, 0x23, 0x89, 0x25, 0x8d, 0xb8, 0x30, 0xd0, 0xd6, 0x7f, 0x36, 0xab, 0x4f, 0x67, 0x69,
	0xdf, 0x0f, 0xd3, 0x44, 0x03, 0x6c, 0xbe, 0x9d, 0xcd, 0x0b, 0x99, 0xa4, 0x3d, 0x69, 0xb2, 0x6e,
	0x00, 0xb5, 0xc7, 0x09, 0xc1, 0x92, 0x84, 0x1d, 0x1e, 0x92, 0x73, 0xb4, 0x09, 0xff, 0x84, 0x51,
	0x2f, 0x65, 0x84, 0xcb, 0x2e, 0xc7, 0x8c, 0x34, 0x9c, 0x0d, 0x67, 0xab, 0x12, 0xd4, 0xc6, 0xc1,
	0x97, 0x98, 0x11, 0xb4, 0x0e, 0x40, 0x15, 0xda, 0x20, 0x0a, 0x1a, 0x51, 0xd1, 0x11, 0x95, 0x76,
	0x3f, 0x3b, 0xb0, 0x7c, 0x6c, 0x3a, 0x0a, 0xc8, 0xbb, 0x94, 0x08, 0x89, 0xfe, 0x87, 0x9a, 0xed,
	0x31, 0x4a, 0xba, 0x34, 0xb4, 0xaf, 0x56, 0x27, 0xb1, 0x4e, 0x88, 0x9a, 0x50, 0x26, 0x23, 0x55,
	0x96, 0x86, 0xf6, 0xc9, 0x25, 0x7d, 0xee, 0x84, 0xe8, 0x21, 0x34, 0x4d, 0x4a, 0x90, 0x64, 0x44,
	0x7b, 0xa4, 0x4b, 0xb9, 0x90, 0x98, 0xab, 0x8f, 0xb0, 0xb1, 0xa0, 0xb1, 0xff, 0x6a, 0xc0, 0x89,
	0xc9, 0x77, 0x6c, 0xba, 0x13, 0x22, 0x1f, 0x16, 0x63, 0x9c, 0x60, 0x26, 0x1a, 0xc5, 0x0d, 0x67,
	0xab, 0xba, 0xbf, 0xea, 0x19, 0x39, 0xbc, 0xb1, 0x1c, 0xde, 0x89, 0x96, 0x23, 0xb0, 0x30, 0xf7,
	0x53, 0x01, 0xea, 0x13, 0xf2, 0x22, 0x8e, 0xb8, 0x20, 0xe8, 0x05, 0x54, 0x25, 0x65, 0x94, 0x0f,
	0xba, 0x94, 0xf7, 0xa3, 0x86, 0xb3, 0x51, 0xdc, 0xaa, 0xee, 0xdf, 0xf1, 0xa6, 0x66, 0xe4, 0x65,
	0xae, 0x78, 0xa7, 0x1a, 0xdf, 0xe1, 0xfd, 0xe8, 0x29, 0x97, 0xc9, 0x45, 0x00, 0x72, 0x12, 0x50,
	0x9c, 0x12, 0x22, 0xd2, 0xa1, 0xd4, 0x7d, 0xe6, 0x71, 0x32, 0x30, 0x74, 0x04, 0xf5, 0x9e, 0x19,
	0x52, 0x97, 0xf2, 0x90, 0xf6, 0x88, 0xea, 0x46, 0x71, 0x68, 0xce, 0x70, 0x98, 0x1e, 0x64, 0xb0,
	0xdc, 0x9b, 0x9c, 0xd4, 0x85, 0xd6, 0x1b, 0xa8, 0x67, 0x38, 0xa1, 0x15, 0x28, 0xbe, 0x25, 0x17,
	0x76, 0x16, 0xea, 0x13, 0xf9, 0x50, 0x1a, 0xe1, 0x61, 0x4a, 0x2c, 0xb1, 0xe6, 0x2f, 0xc4, 0x9e,
	0x58, 0x6f, 0x05, 0x06, 0x77, 0x58, 0x78, 0xe0, 0xb8, 0x07, 0xb0, 0xfc, 0x9c, 0x48, 0xf5, 0xec,
	0x9f, 0x4f, 0xdb, 0x7d, 0x06, 0xf5, 0xc9, 0x25, 0xab, 0xf2, 0x01, 0x94, 0x19, 0x91, 0x38, 0xc4,
	0x12, 0xcf, 0x13, 0x66, 0x02, 0x74, 0xbf, 0x39, 0x00, 0xa7, 0x94, 0x91, 0xe4, 0x44, 0x62, 0x29,
	0xd0, 0x2e, 0x2c, 0x30, 0x82, 0xb9, 0xae, 0x98, 0xcb, 0x5f, 0xc3, 0xd0, 0x0e, 0x14, 0x85, 0x0c,
	0xe7, 0x77, 0xab, 0x50, 0x0a, 0xcc, 0xf0, 0xb9, 0xf5, 0x51, 0x1e, 0x98, 0xe1, 0x73, 0x0d, 0xa6,
	0x5c, 0x9b, 0x73, 0x0e, 0x98, 0x1a, 0x1a, 0x29, 0x6b, 0x94, 0xe6, 0xd3, 0x48, 0x99, 0x7b, 0x4f,
	0x2b, 0xa7, 0xdb, 0xfd, 0x0b, 0xbd, 0x7f, 0x38, 0xb0, 0x72, 0x7d, 0xcd, 0x2a, 0xde, 0x86, 0x8a,
	0xc5, 0x10, 0x73, 0xa9, 0x14, 0x5c, 0x07, 0x50, 0x0b, 0xca, 0x7d, 0x4c, 0x87, 0x69, 0x42, 0x84,
	0x56, 0xa8, 0x14, 0x4c, 0xce, 0xe8, 0x15, 0xd4, 0xec, 0x46, 0x08, 0xf5, 0xa2, 0xb5, 0xa3, 0x37,
	0x63, 0xc7, 0x6c, 0x39, 0xbb, 0x13, 0x3a, 0x66, 0x96, 0xc2, 0x6e, 0x95, 0x8e, 0xb4, 0x5e, 0xc3,
	0x4a, 0x16, 0x70, 0x83, 0x43, 0x77, 0x67, 0x1d, 0xba, 0x3a, 0x53, 0xf1, 0xda, 0x08, 0x53, 0xfe,
	0xdc, 0xff, 0x5e, 0x80, 0xca, 0xf1, 0x58, 0x0a, 0xf4, 0xde, 0x81, 0x25, 0x7b, 0x42, 0x6b, 0x37,
	0xaf, 0xb0, 0x16, 0xb5, 0xd5, 0xce, 0xdb, 0x6f, 0xf7, 0xd1, 0x87, 0x2f, 0x5f, 0x3f, 0x16, 0xee,
	0xbb, 0x77, 0xa7, 0x7e, 0xdf, 0x51, 0x22, 0xfc, 0xcb, 0xe9, 0x41, 0x5c, 0x8d, 0x33, 0xfe, 0xe5,
	0xf8, 0xd7, 0x76, 0x75, 0xe8, 0x6c, 0xa3, 0x18, 0x96, 0xac, 0xf9, 0x33, 0x14, 0x66, 0xf7, 0x28,
	0x43, 0x21, 0xb3, 0x2f, 0xee, 0xb6, 0xa6, 0x70, 0x0b, 0xb9, 0xf9, 0x14, 0xd4, 0x2f, 0x0b, 0x49,
	0x28, 0x8f, 0xc7, 0x81, 0xda, 0xbf, 0x99, 0x92, 0xa9, 0xb9, 0x9e, 0x3b, 0x43, 0x77, 0x47, 0x17,
	0xbd, 0x8d, 0x36, 0xf3, 0x8b, 0x6a, 0x57, 0x1c, 0xad, 0x41, 0x93, 0x84, 0xa9, 0x97, 0x32, 0xee,
	0xf1, 0x61, 0x4c, 0xc9, 0xf4, 0xd3, 0x67, 0x8b, 0xda, 0xdf, 0x07, 0x3f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0xd8, 0x80, 0xac, 0x09, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProcessorClient is the client API for Processor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessorClient interface {
	// Processes an event.
	Process(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessResponse, error)
	// Gets information about the processor.
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
	// Gets globally-aggregated statistics about the processor.
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
}

type processorClient struct {
	cc grpc.ClientConnInterface
}

func NewProcessorClient(cc grpc.ClientConnInterface) ProcessorClient {
	return &processorClient{cc}
}

func (c *processorClient) Process(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessResponse, error) {
	out := new(ProcessResponse)
	err := c.cc.Invoke(ctx, "/mtap.api.v1.Processor/Process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processorClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/mtap.api.v1.Processor/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processorClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/mtap.api.v1.Processor/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessorServer is the server API for Processor service.
type ProcessorServer interface {
	// Processes an event.
	Process(context.Context, *ProcessRequest) (*ProcessResponse, error)
	// Gets information about the processor.
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
	// Gets globally-aggregated statistics about the processor.
	GetStats(context.Context, *GetStatsRequest) (*GetStatsResponse, error)
}

// UnimplementedProcessorServer can be embedded to have forward compatible implementations.
type UnimplementedProcessorServer struct {
}

func (*UnimplementedProcessorServer) Process(ctx context.Context, req *ProcessRequest) (*ProcessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Process not implemented")
}
func (*UnimplementedProcessorServer) GetInfo(ctx context.Context, req *GetInfoRequest) (*GetInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedProcessorServer) GetStats(ctx context.Context, req *GetStatsRequest) (*GetStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}

func RegisterProcessorServer(s *grpc.Server, srv ProcessorServer) {
	s.RegisterService(&_Processor_serviceDesc, srv)
}

func _Processor_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtap.api.v1.Processor/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).Process(ctx, req.(*ProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processor_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtap.api.v1.Processor/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processor_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mtap.api.v1.Processor/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Processor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mtap.api.v1.Processor",
	HandlerType: (*ProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Process",
			Handler:    _Processor_Process_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _Processor_GetInfo_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Processor_GetStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mtap/api/v1/processing.proto",
}
